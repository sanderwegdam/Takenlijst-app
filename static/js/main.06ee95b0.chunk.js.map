{"version":3,"sources":["components/Button.js","components/AddTask.js","components/Tasks.js","components/Taskslist.js","components/Header.js","components/Navbar.js","components/TasksContainer.js","index.js"],"names":["Button","className","AddTask","props","showAdd","useState","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","alert","TextField","id","label","variant","type","autoFocus","placeholder","value","name","onChange","target","Tasks","editing","setEditing","useEffect","console","log","handleEditing","todo","viewMode","editMode","display","class","onDoubleClick","style","onClick","deleteTodoProps","color","fontSize","setUpdate","onKeyDown","event","key","TasksList","todos","map","handleChangeProps","Header","React","Component","Navbar","TasksContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","completed","prevState","filter","updatedTitle","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.06ee95b0.chunk.js","sourcesContent":["import '.././App.css'\nimport { FaPlus } from \"react-icons/fa\";\n\nconst Button = () => {\n  return (\n    <button className='btn'>\n      <FaPlus />\n    </button>\n  )\n}\n\nexport default Button\n","import React, { useState } from \"react\";\nimport Button from './Button';\nimport TextField from '@mui/material/TextField';\n\nconst AddTask = (props, showAdd) => {\n  const [inputText, setInputText] = useState({\n    title: \"\",\n  })\n\n  const onChange = e => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputText.title.trim()) {\n      props.addTodoProps(inputText.title);\n      setInputText({\n        title: \"\",\n      })\n    } else {\n      alert(\"Voer eerst een taak in\")\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <TextField id=\"outlined-basic\" label=\"Taak\" variant=\"outlined\" type=\"text\" autoFocus className=\"input-text\" placeholder=\"Voer hier een taak in\" value={inputText.title} name=\"title\" onChange={onChange} />\n      <Button />\n    </form>\n  )\n}\n\nexport default AddTask\n","import React, { useState, useEffect } from \"react\"\nimport \".././App.css\"\nimport { FaTimes } from \"react-icons/fa\";\nimport { TiEdit } from 'react-icons/ti';\n\nconst Tasks = (props) => {\n  const [editing, setEditing] = useState(false)\n\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up...\")\n    }\n  }, [])\n\n  const handleEditing = () => {\n    setEditing(true)\n  }\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === \"Enter\") {\n      setEditing(false)\n    }\n  }\n\n  const handleUpdatedButton = () => {\n    setEditing(false)\n  }\n\n  const { id, title } = props.todo\n\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  return (\n    <div class=\"item-container\">\n      <li className=\"item\">\n        <div onDoubleClick={handleEditing} style={viewMode}>\n          <button onClick={() => props.deleteTodoProps(id)}>\n            <FaTimes style={{ color: \"red\", fontSize: \"16px\" }} />\n          </button>\n          <button>\n            <TiEdit style={{ color: \"gray\", fontSize: \"16px\" }} onClick={handleEditing} className='edit-icon' />\n          </button>\n          <span>{title}</span>\n        </div>\n        <input type=\"text\" style={editMode} className=\"textInput\" value={title} onChange={(e) => { props.setUpdate(e.target.value, id) }}\n          onKeyDown={handleUpdatedDone}\n        />\n        <button style={editMode} className=\"item-button\" onClick={handleUpdatedButton}>Wijzig</button>\n      </li>\n    </div>\n  )\n}\n\nexport default Tasks","import React from \"react\"\nimport Task from \"./Tasks\";\n\nconst TasksList = props => {\n  return (\n    <ul>\n      {props.todos.map(todo => (\n        <Task key={todo.id} todo={todo} handleChangeProps={props.handleChangeProps}\n          deleteTodoProps={props.deleteTodoProps} setUpdate={props.setUpdate}\n        />\n      ))}\n    </ul>\n  )\n}\nexport default TasksList","import React from 'react';\r\nimport '.././App.css';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\n\r\nclass Header extends React.Component {\t\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<Navbar color=\"primary\">\r\n\t\t\t\t\t<div className=\"container\" id=\"brand\">\r\n\t\t\t\t\t\t<NavbarBrand>Takenlijst</NavbarBrand>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Navbar>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import Header from './Header'\n\nconst Navbar = () => {\n  return (  \n    <nav className=\"navBar\">\n      <Header />\n    </nav>\n  )  \n}\nexport default Navbar\n\n","import React, { useState, useEffect } from \"react\"\nimport AddTask from \"./AddTask\"\nimport TasksList from \"./Taskslist\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport Navbar from \"./Navbar\";\n\nconst TasksContainer = () => {\n\n  const [todos, setTodos] = useState(getInitialTodos())\n\n  useEffect(() => {\n    const temp = JSON.stringify(todos)\n    localStorage.setItem(\"todos\", temp)\n  }, [todos])\n\n  function getInitialTodos() {\n    const temp = localStorage.getItem(\"todos\")\n    const savedTodos = JSON.parse(temp)\n    return savedTodos || []\n  }\n\n  const handleChange = id => {\n    setTodos(prevState => prevState.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo, completed: !todo.completed\n        }\n      }\n      return todo\n    }))\n  }\n\n  const delTodo = id => {\n    setTodos([\n      ...todos.filter(todo => {\n        return todo.id !== id\n      }),\n    ])\n  };\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false\n    };\n    setTodos([...todos, newTodo])\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.title = updatedTitle\n        }\n        return todo\n      })\n    )\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"inner\">\n          <AddTask addTodoProps={addTodoItem} />\n          <TasksList\n            todos={todos}\n            handleChangeProps={handleChange}\n            deleteTodoProps={delTodo}\n            setUpdate={setUpdate}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TasksContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TasksContainer from \"./components/TasksContainer\"\nimport \"./App.css\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL + '/'}>\n      <TasksContainer />\n    </Router>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}